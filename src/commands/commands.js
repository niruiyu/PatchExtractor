/*
 * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
 * See LICENSE in the project root for license information.
 */

const { convertToPatch, getPatchFileName } = require('./patchUtils');

/* global global, Office, self, window */
const ADDIN_NAME = "PatchExtractor.js v0.9";

Office.onReady(() => {
  // If needed, Office.js is ready to be called
});

/**
 * Displays a notification message in the Office Add-in.
 * @param {string} msgType - The type of the message.
 * @param {string} msgText - The text of the message.
 */
function prompt(msgType, msgText) {
  const message = {
    type: msgType,
    message: msgText,
    icon: "Icon.32x32",
    persistent: false,
  };
  Office.context.mailbox.item.notificationMessages.replaceAsync("extractPatch", message);
}

/**
 * Downloads a patch file with the given content and file name.
 * @param {string} content - The content of the file.
 * @param {string} fileName - The name of the file.
 */
function downloadPatchFile(content, fileName) {
  const file = new Blob([content], { type: "text/plain" });
  const url = URL.createObjectURL(file);

  const a = document.createElement("a");
  a.href = url;
  a.download = fileName;

  a.click(); // Simulate a click to start the download

  URL.revokeObjectURL(url); // Clean up: revoke the object URL
}

/**
 * Extracts the mail body to a patch file.
 * @param {Office.AddinCommands.Event} event - The event object.
 */
function extractPatch(event) {
  const mailItem = Office.context.mailbox.item;
  prompt(Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage, "Extracting patch...");
  mailItem.body.getAsync(Office.CoercionType.Text, function (result) {
    if (result.status != Office.AsyncResultStatus.Succeeded) {
      prompt(Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage, "Failed to get mail content!");
      event.completed();
      return;
    }

    const now = new Date();
    const [success, patchBody] = convertToPatch(result.value);

    downloadPatchFile(
      `From: ${mailItem.from.displayName} <${mailItem.from.emailAddress}>\n` +
        `Date: ${mailItem.dateTimeCreated}\n` +
        `Subject: ${mailItem.subject}\n\n` +
        patchBody +
        `Generated by ${ADDIN_NAME} at ${now.toISOString()}\n`,
      getPatchFileName(mailItem.subject, success)
    );

    if (success) {
      prompt(Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage, "Extracting patch... Done.");
    } else {
      prompt(
        Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,
        "Extracting patch... Done. But the file may not be in patch format!"
      );
    }

    event.completed();
  });
}

window.extractPatch = extractPatch;